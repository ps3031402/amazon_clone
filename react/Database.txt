How to setup vscode and clever cloud postgres 
1. install vscode extension "Postgres client Microsoft"
2. create a user id on clever cloud
3. add a addon of postgres to clever cloud
4. get the credentials of the database from clever cloud.


Q.    What are databases ? 
Ans : Databse is a collection of interreleted data.
      Which is basically a system of storing data in a structured way. 

Purpose of Databases :
    1. To store data in a structured way.
    2. To reduce redundency(data duplication).
    3. Databases can control the data inconsistency.
    4. Database facilitates the data manipulation, sharing etc.
    5. Database enforce standards and data security.
    6. Database can be used for data analysis.

Various Levels Of Implementation:
    1. Internal level(Physical Level).
    2. Conceptual level(Logical Level).
    3. External level(Network Level).


Person 1  ==> withdraw 100  Atm 1000       /// balance = 900
Person 2  ==> withdraw 200  Atm 1000       /// balance = 800


Concept of data independence:
    1. Physical Independence
    2. Logical Independence

Different types of datamodels:
    1. Relational Model
    2. Object Oriented Model
    3. Document Oriented Model
    4. XML Model
    5. JSON Model



Relational Database Terminologies:-
    1. Table:- Relation:- Relation is a set of tuples.
    2. Tuples:- Row:- Tuple is a set of attributes. 
    3. Column:- Attribute:- Attribute is a column of a table.
    4. Cardinality:- Cardinality is the number of tuples in a relation.
    5. Degree:- Degree is the number of attributes in a relation.
    6. Primary Key:- Primary Key is the attribute which uniquely identifies a tuple.
    7. Foreign Key:- Foreign Key is the attribute which uniquely identifies a tuple in another relation.
    8. Unique Key:- Unique Key is the attribute which uniquely identifies a tuple in a relation.
    10. Record :- Row of a table.




SQL: Structured Query Language
     SQL is a query language which is used to query data from a database.
     SQL is a simple language used for accessing, handeling ad managing data in a Relational Database.



You write Commands in SQL.

Types of commands in SQL. 
    -- DDL : Data Definition Language
           :: Create Table
           :: Drop Table
           :: Alter Table
           :: Create Database

    -- DML : Data Manipulation Language
           :: Insert
           :: Update
           :: Delete
           :: Truncate
    
    -- DCL : Data Control Language
           :: Grant
           :: Revoke
    
    -- TCL : Transaction Control Language
           :: Begin
           :: Commit
           :: Rollback

    -- DQl : Data Query Language
           :: Select
              :: From
                :: Where
                :: Group By
                :: Having
                :: Order By
                :: Limit
                :: Offset
                :: Union
                :: Intersect
                :: Except
                :: Join   ==> On
                    :: Cross Join
                    :: Inner Join
                    :: Left Join
                    :: Right Join
                    :: Full Join
                    :: Natural Join

Data Types :
    -- Integer --
    -- Float   --
    -- varchar --
    -- char    -- 
    -- date
    -- time
    -- datetime
    -- binary
    -- blob
    -- text


Create Table Command : 
    create table <table_name> (
        <column_name> <data_type> <constraint> <default_value>,
        <column_name> <data_type> <constraint> <default_value>,
        ...
        ..
        .

    )


What are constraints Constraint ?
Restrictions on the data (Attribute).
    1. Not Null
    2. Unique
    3. Primary Key
    4. Foreign Key
    5. Check
    6. Default
    7. Serial
    8. References


Example Login Table ==> Username, password

Create table login(
    id serial primary key,
    username varchar not null unique,
    password varchar not null unique
);

Insert Command : 

insert into <table_name> (
    <column_name>,
    <column_name>,
    ...
    ...
    .
) values (
    <value>,
    <value>,
    ...
    ...
    .
);

insert into login values(1, 'admin', 'admin');








Tables For amazon clone 

Products{
    id serial 
    name 
    price 
    quantity 
    description 
    image 
    category 
    countInStock 
    brand 
    description
}

login{
    id
    username
    password 
}

cart {
    id          
    productId  -> fk    -> products   
    quantity    
    userId     -> fk    -> login
    date       Default Current Date
}







Select Command : Query the data(table/relation) from the database.

    Syntax: 
        select 
            <column_name>,
            <column_name>,
            <column_name>
            from <table_name> 
            [where <condition>] and [<condition>] or [<condition>]
            [order by <column_name>] 
            [group by <column_name>] 
            [having <condition>] 
            





SYNTAX of update command 
    update <table_name> set <column_name> = <value> where <condition>;





Like Operator : 
    <column_name> like <value>
    <column_name> not like <value>;

    Definition: 
        _ : Matches any single character.
        % : Mathches any string of characters including empty string.




Alter Command: 
    It is used to modify the existing table structure.

Table student(  id int,  name varchar,  age int);

-- Alter Table student add column
-- add primary key
-- add foreign key
-- add unique key



-- on delete on update cascade 
and 
-- joins 





Types of relations:
    1. One to One    : 1...1  
    2. One to Many   : 1...*  
    3. Many to Many  : *...*  
    4. Many to One   : *...1  



09/02/2022

Define Joins?


Types of PostgreSQL JOIN 
•	Cross Join
•	Inner Join
•	Left Outer Join 
•	Right Outer Join 
•	Full Outer Join 

SYNTAX of PostgreSQL JOIN
select * from 
<table1(left table)> <type> join <table2(right table)> 
on 
<column1> = <column2>;


10/12/22
Define Transactions?
A transaction is a very small unit of a program(commands/instructions) and it may contain several lowlevel tasks.
A transaction in a database system must maintain Atomicity, Consistency, Isolation, and Durability
− commonly known as ACID properties − in order to ensure accuracy, completeness, and data integrity.


ACID Properties:-
    1. Atomicity
    2. Consistent
    3. Isolated
    4. Durable

Durability − The database should be durable enough to hold all its latest updates even if the 
             system fails or restarts. If a transaction updates a chunk of data in a database and commits, 
             then the database will hold the modified data. If a transaction commits but the system fails 
             before the data could be written on to the disk, then that data will be updated once the 
             system springs back into action.


Begin: A transaction is beginning to initiate the execution of multiple SQL statements. 
       Beginning of a transaction guarantees the atomicity of a transaction. 
       After beginning, either it can be committed to making the modifications permanent or
       rolled back to undo the changes to leave the database unaltered.

Rollback: By rolling back a transaction, a transaction is explicitly closed and any modifications 
          made by the transaction is discarded.

Savepoint: SAVEPOINT command is used to temporarily save a transaction so that you can rollback 
           to that point whenever required.

           Stores the current state of the database;

End: End the transaction;

Commit: Commit the transaction;



-- 11/02/2022


-- Views : Views are snapshots of the specified select query 

SYNTAX-:
CREATE [OR REPLACE] VIEW view_name AS
  SELECT columns
  FROM tables
  [WHERE conditions];


Command to view the data from views:
SELECT * FROM view_name;


Functions or Stored Procedures:
create [or replace] procedure/function procedure_name(parameter_list)
language plpgsql
as $$
declare
-- variable declaration
begin
-- stored procedure body
end; $$